generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  email           String           @unique
  role            Role             @default(BASIC)
  name            String?
  age             Int
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  writtenPosts    Post[]           @relation("writtenPosts")
  favoritePosts   Post[]           @relation("favoritePosts")

  userPreference         UserPreference?    @relation(fields: [userPreferenceId], references: [id])
  userPreferenceId       String?  @unique @db.ObjectId
  @@unique([age, name])
  @@index([name])
}

// one to one
model UserPreference {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  emailUpdates Boolean
  User User?
}

// one to many
model Post {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  rating        Float
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  views         Int
  comments      BigInt
  title         String
  content       String
  author        User      @relation("writtenPosts", fields: [authorId], references: [id])
  authorId      String    @db.ObjectId
  favoritedBy   User?     @relation("favoritePosts", fields: [authorId], references: [id])
  favoritedById String?
  Category      Category? @relation(fields: [categoryId], references: [id])
  categoryId    String?   @db.ObjectId
}

// many to many
model Category {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String @unique
  posts Post[]
}

enum Role {
  BASIC
  ADMIN
}
